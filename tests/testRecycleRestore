#!/bin/bash

##########
# Set up #
##########

cd "$(dirname "$0")" || exit 1
. ./testUtils
. ./exportEnv
clearAll

printf "\033[1;35mStarting Test Suite:\033[0m %s\n" "$0"

echo "WARNING: running tests will remove all files in the recycle bin and remove all records in .restore.info"
echo "Do you want to continue? (y/n)"
read -r answer
if [ "$answer" != "y" ]; then
	exit 1
fi

##############
# Test cases #
##############

testName="Recycle a single file then restore it"
fileName1="testFile"
touch "$fileName1"
inodeNumber1="$(getInodeNumber "$fileName1")"
absPath1="$(realpath "$fileName1")"
cmd="bash '$projectRoot/recycle' \"$fileName1\"; bash '$projectRoot/restore' \"${fileName1}_$inodeNumber1\""
testExe "$testName" "$cmd" ''
verifyFileExist "$fileName1"
verifyFileNotExist "$recycleBin/${fileName1}_$inodeNumber1"
checkRestoreInfoNotExist "${fileName1}_$inodeNumber1" "$absPath1"
rm "$fileName1"

testName="Recycle 2 files then restore 1 of them"
fileName1="testFile1"
fileName2="testFile2"
touch "$fileName1" "$fileName2"
inodeNumber1="$(getInodeNumber "$fileName1")"
inodeNumber2="$(getInodeNumber "$fileName2")"
absPath1="$(realpath "$fileName1")"
absPath2="$(realpath "$fileName2")"
cmd="bash '$projectRoot/recycle' \"$fileName1\" \"$fileName2\"; bash '$projectRoot/restore' ${fileName1}_$inodeNumber1"
testExe "$testName" "$cmd" ''
verifyFileExist "$fileName1"
verifyFileExist "$recycleBin/${fileName2}_$inodeNumber2"
verifyFileNotExist "$recycleBin/${fileName1}_$inodeNumber1"
verifyFileNotExist "$fileName2"
checkRestoreInfoNotExist "${fileName1}_$inodeNumber1" "$absPath1"
checkRestoreInfo "${fileName2}_$inodeNumber2" "$absPath2"
rm "$fileName1"
clearAll

testName="Recycle multiple files using globbing then restore 1 of them"
fileName1="testFile1"
fileName2="testFile2"
touch "$fileName1" "$fileName2"
inodeNumber1="$(getInodeNumber "$fileName1")"
inodeNumber2="$(getInodeNumber "$fileName2")"
absPath1="$(realpath "$fileName1")"
absPath2="$(realpath "$fileName2")"
cmd="bash '$projectRoot/recycle' testFile*; bash '$projectRoot/restore' ${fileName1}_$inodeNumber1"
testExe "$testName" "$cmd" ''
verifyFileExist "$fileName1"
verifyFileExist "$recycleBin/${fileName2}_$inodeNumber2"
verifyFileNotExist "$recycleBin/${fileName1}_$inodeNumber1"
verifyFileNotExist "$fileName2"
checkRestoreInfoNotExist "${fileName1}_$inodeNumber1" "$absPath1"
checkRestoreInfo "${fileName2}_$inodeNumber2" "$absPath2"
rm "$fileName1"
clearAll

testName="Recycling multiple files won't stop at non-existing file"
fileName1="testFile1"
fileName2="testFile2"
touch "$fileName1" "$fileName2"
inodeNumber1="$(getInodeNumber "$fileName1")"
inodeNumber2="$(getInodeNumber "$fileName2")"
absPath1="$(realpath "$fileName1")"
absPath2="$(realpath "$fileName2")"
cmd="bash '$projectRoot/recycle' \"$fileName2\" \"non-existing-file\" \"$fileName1\"; bash '$projectRoot/restore' ${fileName1}_$inodeNumber1"
testExe "$testName" "$cmd" \
	"$projectRoot/recycle: file 'non-existing-file' does not exist"
verifyFileExist "$fileName1"
verifyFileExist "$recycleBin/${fileName2}_$inodeNumber2"
verifyFileNotExist "$recycleBin/${fileName1}_$inodeNumber1"
verifyFileNotExist "$fileName2"
checkRestoreInfoNotExist "${fileName1}_$inodeNumber1" "$absPath1"
checkRestoreInfo "${fileName2}_$inodeNumber2" "$absPath2"
rm "$fileName1"
clearAll

testName='Recursive recycling then recursive restoring'
mkdir -p tmpDir/nestDir tmpDir/restoreDir
touch tmpDir/f{1..3} tmpDir/nestDir/f{1..3} tmpDir/restoreDir/f{1..3}
inodeNumber="$(getInodeNumber tmpDir/restoreDir/f1)"
recycleFileName="f1_$inodeNumber"
realPath="$(realpath tmpDir/restoreDir/f1)"
cmd="bash '$projectRoot/recycle' -r tmpDir; bash '$projectRoot/restore' -r tmpDir/restoreDir"
testExe "$testName" "$cmd" ''
verifyFileExist tmpDir/restoreDir/f1
verifyFileExist tmpDir/restoreDir/f2
verifyFileExist tmpDir/restoreDir/f3
verifyFileNotExist tmpDir/nestDir
checkRestoreInfoNotExist "$recycleFileName" "$realPath"
rm -rf tmpDir
clearAll

testName='Recursive recycling then recursive restoring with weird names'
mkdir -p 'tmp Dir/nest+Dir' 'tmp Dir/restore+Dir'
touch 'tmp Dir/f'{1..3} 'tmp Dir/nest+Dir/f%'\ {1..3} 'tmp Dir/restore+Dir/f%'\ {1..3}
inodeNumber="$(getInodeNumber 'tmp Dir/restore+Dir/f% 1')"
recycleFileName="f% 1_$inodeNumber"
realPath="$(realpath 'tmp Dir/restore+Dir/f% 1')"
cmd="bash '$projectRoot/recycle' -r 'tmp Dir'; bash '$projectRoot/restore' -r 'tmp Dir/restore+Dir'"
testExe "$testName" "$cmd" ''
verifyFileExist 'tmp Dir/restore+Dir/f% 1'
verifyFileExist 'tmp Dir/restore+Dir/f% 2'
verifyFileExist 'tmp Dir/restore+Dir/f% 3'
verifyFileNotExist 'tmp Dir/nest+Dir'
checkRestoreInfoNotExist "$recycleFileName" "$realPath"
rm -rf 'tmp Dir'
clearAll
