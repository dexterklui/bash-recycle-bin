#!/bin/bash

##########
# Set up #
##########

. ./testUtils

##############
# Test cases #
##############

clearAll

testExe 'no argument' 'bash ./recycle' \
	'./recycle: no filename is provided'
testExe 'provided single non-existing file' 'bash ./recycle non-existing-file' \
	"./recycle: file 'non-existing-file' does not exist"

mkdir -p "$tmpDir"
testExe 'provided single directory' "bash ./recycle \"$tmpDir\"" \
	"./recycle: '$tmpDir' is a directory, but expect a file"
rmdir "$tmpDir"

testExe 'recycle the recycle script itself' 'bash ./recycle ./recycle' \
	"./recycle: cannot recycle itself"

touch "$tmpFile"
inodeNumber="$(getInodeNumber "$tmpFile")"
testExe 'recycle single file does put into recyle bin' "bash ./recycle \"$tmpFile\"" ''
verifyFileExist "$recycleBin/${tmpFile}_$inodeNumber"
clearAll

mkdir -p "$tmpDir"
targetFile="$tmpDir/$tmpFile"
touch "$targetFile"
inodeNumber="$(getInodeNumber "$targetFile")"
testExe 'recycle single file in a directory does put into recyle bin' "bash ./recycle \"$targetFile\"" ''
verifyFileExist "$recycleBin/${tmpFile}_$inodeNumber"
rmdir "$tmpDir"
clearAll

touch "$tmpFile"
absPath="$(realpath "$tmpFile")"
inodeNumber="$(getInodeNumber "$tmpFile")"
testExe 'recycling file updates .restore.info' "bash ./recycle \"$tmpFile\"" ''
checkRestoreInfo "${tmpFile}_$inodeNumber" "$absPath"
clearAll

testName='removing multiple files with same filename'
file1="$tmpFile"
file2="$tmpDir/$tmpFile"
mkdir -p "$tmpDir"
touch "$file1" "$file2"
path1="$(realpath "$file1")"
path2="$(realpath "$file2")"
inode1="$(getInodeNumber "$file1")"
inode2="$(getInodeNumber "$file2")"
testExe "$testName" "bash ./recycle \"$file1\"; bash ./recycle \"$file2\"" ''
checkRestoreInfo "${tmpFile}_$inode1" "$path1"
checkRestoreInfo "${tmpFile}_$inode2" "$path2"
verifyFileExist "$recycleBin/${tmpFile}_$inode1"
verifyFileExist "$recycleBin/${tmpFile}_$inode2"
rmdir "$tmpDir"
clearAll
